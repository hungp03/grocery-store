services:
  # MySQL Database
  database:
    image: mysql:8
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: demo_password
      MYSQL_DATABASE: grocery_store
      MYSQL_USER: demo_user
      MYSQL_PASSWORD: demo_secret
      TZ: Asia/Ho_Chi_Minh
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app_network

  # Redis
  redis:
    image: redis:7.2
    container_name: redis
    volumes:
      - ./redis.acl:/usr/local/etc/redis/redis.acl
    command: [
      "redis-server",
      "--requirepass", "demosecret",
      "--aclfile", "/usr/local/etc/redis/redis.acl"
    ]
    ports:
      - "6379:6379"
    networks:
      - app_network

  # Spring Boot Backend
  backend:
    container_name: backend
    build:
      context: ./server
    env_file:
      - ./server/.env
    ports:
      - "8080:8080"
    depends_on:
      - database
      - redis
    networks:
      - app_network

  # React Frontend
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - app_network

  # Nginx
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    networks:
      - app_network

volumes:
  mysql_data:

networks:
  app_network:
